name: Build and Deploy Backend

on:
  push:
    branches: [main]

env:
  DOCKERHUB_REPO: millionmulugeta/remi_server
  COMPOSE_PROJECT_NAME: remi_backend
  SERVER_DIR: ~/mrbeas

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          # Use semantic versioning (you can adjust this)
          VERSION=1.0.${{ github.run_number }}
          LATEST_TAG=latest
          
          # Build from the root (where Dockerfile should be)
          docker build -t $DOCKERHUB_REPO:$VERSION .
          docker push $DOCKERHUB_REPO:$VERSION
          
          # Tag and push as latest
          docker tag $DOCKERHUB_REPO:$VERSION $DOCKERHUB_REPO:$LATEST_TAG
          docker push $DOCKERHUB_REPO:$LATEST_TAG
          
          # Store the version for the deploy step
          echo "VERSION=$VERSION" >> $GITHUB_ENV

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            # Pull the new image
            docker pull $DOCKERHUB_REPO:${{ env.VERSION }}
            docker pull $DOCKERHUB_REPO:latest
            
            # Navigate to project directory
            cd $SERVER_DIR
            
            # Stop and remove old containers
            docker-compose down || true
            
            # Bring up new containers
            docker-compose up -d
            
            # Clean up old images to save space
            docker image prune -af
