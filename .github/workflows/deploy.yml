name: Deploy App to Remote Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_REPO }}:latest .
          docker push ${{ secrets.DOCKERHUB_REPO }}:latest

      - name: Deploy to Remote Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script_stop: true
          script: |
            set -e

            echo "=== Go to project directory ==="
            cd ~/mrbeas

            echo "=== Install Docker Compose v2 if needed ==="
            if ! command -v docker compose &> /dev/null; then
              sudo mkdir -p /usr/local/lib/docker/cli-plugins
              sudo curl -SL https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-linux-x86_64 -o /usr/local/lib/docker/cli-plugins/docker-compose
              sudo chmod +x /usr/local/lib/docker/cli-plugins/docker-compose
            fi

            echo "=== Pull Latest Docker Image ==="
            docker pull ${{ secrets.DOCKERHUB_REPO }}:latest

            echo "=== Stop and Remove Current Containers ==="
            docker compose down || true

            echo "=== Start New Containers ==="
            docker compose up -d --force-recreate

            echo "=== Wait for SSL setup ==="
            sleep 15

            echo "=== Docker Containers ==="
            docker compose ps

            echo "=== nginx-proxy Logs ==="
            docker logs nginx-proxy --tail 20 || echo "nginx-proxy container missing"

            echo "=== Let's Encrypt Logs ==="
            docker logs nginx-letsencrypt --tail 20 || echo "nginx-letsencrypt container missing"

            echo "=== Backend Logs ==="
            docker logs remi_server --tail 20 || echo "Backend container missing"

            echo "=== Check SSL Certs ==="
            docker exec nginx-letsencrypt ls /etc/nginx/certs || echo "No SSL certs found"

            echo "=== Curl Backend Health Check ==="
            curl -I http://localhost:3000 || echo "Backend not responding"
