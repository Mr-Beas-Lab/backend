name: Build and Deploy

on:
  push:
    branches: [main]  # Adjust to your main branch if needed

env:
  DOCKERHUB_REPO: millionmulugeta/remi_server  # Set your Docker Hub repository
  COMPOSE_PROJECT_NAME: remi_backend  # Adjust as needed

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Checkout the repo

      - name: Login to Docker Hub
        uses: docker/login-action@v3  # Login to Docker Hub using secrets
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image with version tag
        run: |
          TAG=1.0.${{ github.run_number }}  # Use run number for versioning
          echo "Using tag: $TAG"
          
          # Build the Docker image from the remi_Backend directory
          docker build -t $DOCKERHUB_REPO:$TAG ./remi_Backend  # Adjust path to remi_Backend folder

          # Push the image with the version tag
          docker push $DOCKERHUB_REPO:$TAG

          # Tag the image as latest and push it
          docker tag $DOCKERHUB_REPO:$TAG $DOCKERHUB_REPO:latest
          docker push $DOCKERHUB_REPO:latest

  deploy:
    needs: build  # Make sure the build job runs first
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}  # IP of the VPS
          username: ${{ secrets.SERVER_USER }}  # VPS username
          password: ${{ secrets.SERVER_PASSWORD }}  # Use password authentication
          script: |
            TAG=1.0.${{ github.run_number }}  # Use run number for versioning
            
            # Ensure the directory structure exists
            mkdir -p ~/mrbeas/remi_Backend
            
            # Navigate to the directory where docker-compose.yml is located (~/mrbeas)
            cd ~/mrbeas

            # Ensure docker-compose.yml exists in the correct directory
            if [ ! -f "docker-compose.yml" ]; then
              echo "docker-compose.yml not found!"
              exit 1
            fi

            # Pull the versioned image and latest image from Docker Hub
            docker pull $DOCKERHUB_REPO:$TAG
            docker pull $DOCKERHUB_REPO:latest

            # Stop and remove the running container if it's present
            docker-compose down || true

            # Start the new container with the latest image
            docker-compose up -d
